// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
<App>
  <IntlProvider
    defaultFormats={Object {}}
    defaultLocale="en"
    formats={Object {}}
    locale="en"
    messages={
      Object {
        "authentication.SignIn.error.badCredentials": "Wrong username/password combination",
        "authentication.SignIn.error.emailNotVerified": "You have not verified your email address yet",
        "authentication.SignIn.forgotPassword": "Forgot your password ?",
        "authentication.SignIn.login": "Login",
        "authentication.SignIn.login.loading": "Connecting...",
        "authentication.SignIn.password": "Password",
        "authentication.SignIn.signUpButton": "Sign Up !",
        "authentication.SignIn.signUpMessage": "First time here ? ",
        "authentication.SignIn.title": "Ready to watch movies ? ",
        "authentication.SignIn.username": "Username",
        "authentication.confirmEmail.homeButton": "Start enjoying our movies",
        "authentication.confirmEmail.notVerified": "Oops, something went wrong",
        "authentication.confirmEmail.verified": "Your email address has been verified !",
        "authentication.confirmEmail.waiting": "Confirming your email address...",
        "authentication.error.required": "This field is required",
        "authentication.error.unknown": "An unknown error happened",
        "authentication.signUp.email": "Your email (so we can spam you)",
        "authentication.signUp.error.email.invalid": "Email is invalid",
        "authentication.signUp.error.email.taken": "Oops, this email is already used",
        "authentication.signUp.error.password.invalid": "Your password needs to have minimum 8 characters long, with at least one lowercase letter, one uppercase letter and one number",
        "authentication.signUp.error.picture.tooHeavy": "Oof, your picture is too big. Select one smaller than 1Mo",
        "authentication.signUp.error.picture.wrongType": "Sorry, we only accept .jpeg, .jpg et .png",
        "authentication.signUp.error.required.picture": "Don't be shy, you need to upload a profile picture",
        "authentication.signUp.error.username.taken": "Damn, this username is not available",
        "authentication.signUp.firstName": "Your first name",
        "authentication.signUp.lastName": "Your last name",
        "authentication.signUp.password": "Your top secret password",
        "authentication.signUp.picture": "Your handsome face",
        "authentication.signUp.sendButton": "I register on this awesome website",
        "authentication.signUp.sendButton.loading": "Sending all your precious data",
        "authentication.signUp.signInButton": "Or sign in here !",
        "authentication.signUp.subtitle": "To access all our film, you're gonna have to register",
        "authentication.signUp.title": "Who are you ?",
        "authentication.signUp.uploadButton": "Upload",
        "authentication.signUp.username": "Your little username",
        "authentication.signUpDone.bingeWatching": "Then you can start binge watching our content",
        "authentication.signUpDone.emailProblem": "You didn't receive your email ?",
        "authentication.signUpDone.emailProblemButton": "Resend email",
        "authentication.signUpDone.goClick": "You just have to click on the link, like always...",
        "authentication.signUpDone.snack.alreadyConfirmed": "Your email is already confirmed",
        "authentication.signUpDone.snack.send": "New email sent !",
        "authentication.signUpDone.snack.tooSoon": "We just sent you an email, wait a bit before trying to resend",
        "authentication.signUpDone.snack.unknown": "Unknown error",
        "authentication.signUpDone.title": "Nice to meet you",
        "authentication.signUpDone.weSent": "We've sent a confirmation email to ",
        "disconnect": "Disconnect",
        "error.content": "Something went wrong",
        "error.link_menu": "Go back",
        "error.title": "Oops...",
        "fourOhFour.content": "Page not found",
        "fourOhFour.link_menu": "Go back",
        "fourOhFour.title": "404",
        "justError": " ",
        "language.en": "ðŸ‡¬ðŸ‡§",
        "language.fr": "ðŸ‡«ðŸ‡·",
        "layout.filters.collection": "Collection",
        "layout.filters.production_year": "Production year",
        "layout.filters.search": "Search a film, an author...",
        "layout.filters.select.maxrating": "Max. rating",
        "layout.filters.select.minrating": "Min. rating",
        "layout.filters.select.reset": "Reset filter",
        "layout.filters.select_category.additional_collections_video": "Additional collections videos",
        "layout.filters.select_category.classic_tv": "Classic TV",
        "layout.filters.select_category.community_media": "Community videos",
        "layout.filters.select_category.educationalfilms": "Educational films",
        "layout.filters.select_category.feature_films": "Feature films",
        "layout.filters.select_category.opensource_movies": "Open source movies",
        "layout.filters.select_category.podcasts": "Podcasts",
        "layout.filters.select_category.tvarchive": "TV Archive",
        "layout.filters.select_category.youtubearchive": "Youtube archives",
        "layout.filters.select_collection": "Select a collection",
        "layout.filters.selected_collections": "{count} collections selected",
        "movie.comment.askRating": "Rate it :",
        "movie.comment.label": "Tell us what you think about the movie",
        "movie.comment.none": "There is no comment yet, add yours !",
        "movie.comment.send": "Send",
        "movie.comment.title": "Wanna say something about it ?",
        "movie.creator": "Created by : ",
        "movie.description": "About this movie : ",
        "movie.error.invalid": "Sorry, this movie does not exists. Maybe find an other one ?",
        "movie.prodDate": "Production date : ",
        "movie.rating": "Movie's rating",
        "movie.runTime": "Run time : ",
        "profile": "My profile",
        "profile.myprofile.password.changed": "Password has been set",
        "profile.myprofile.password.error.current": "Current password doesn't match",
        "profile.myprofile.password.error.different": "Passwords doesn't match",
        "profile.myprofile.password.error.not_matching_old": "The current password is incorrect",
        "profile.myprofile.password.error.required": "This field is required",
        "profile.myprofile.password.placeholder.confirmedpass": "Confirm new password",
        "profile.myprofile.password.placeholder.currentpass": "Current password",
        "profile.myprofile.password.placeholder.newpass": "New Password",
        "search": "Search...",
        "search.details_placeholder": "Select a film to view its description",
        "search.film.author": "By {author}",
        "search.film.norating": "No rating yet",
        "search.film.tags": "Tags",
        "search.film.unknown_author": "Unknown",
        "search.film.watch": "Watch film",
        "search.film_count": "Found {count} movies",
        "search.loading": "Loading...",
        "title": "Hypertube",
      }
    }
    onError={[Function]}
    textComponent={Symbol(react.fragment)}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Layout
        locale="en"
        setLocale={[Function]}
      >
        <ThemeProvider
          theme={
            Object {
              "breakpoints": Object {
                "between": [Function],
                "down": [Function],
                "keys": Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ],
                "only": [Function],
                "up": [Function],
                "values": Object {
                  "lg": 1280,
                  "md": 960,
                  "sm": 600,
                  "xl": 1920,
                  "xs": 0,
                },
                "width": [Function],
              },
              "direction": "ltr",
              "mixins": Object {
                "gutters": [Function],
                "toolbar": Object {
                  "@media (min-width:0px) and (orientation: landscape)": Object {
                    "minHeight": 48,
                  },
                  "@media (min-width:600px)": Object {
                    "minHeight": 64,
                  },
                  "minHeight": 56,
                },
              },
              "overrides": Object {},
              "palette": Object {
                "action": Object {
                  "active": "#fff",
                  "disabled": "rgba(255, 255, 255, 0.3)",
                  "disabledBackground": "rgba(255, 255, 255, 0.12)",
                  "hover": "rgba(255, 255, 255, 0.1)",
                  "hoverOpacity": 0.1,
                  "selected": "rgba(255, 255, 255, 0.2)",
                },
                "augmentColor": [Function],
                "background": Object {
                  "default": "#121212",
                  "paper": "#212121",
                },
                "common": Object {
                  "black": "#000",
                  "white": "#fff",
                },
                "contrastThreshold": 3,
                "divider": "rgba(255, 255, 255, 0.12)",
                "error": Object {
                  "contrastText": "#fff",
                  "dark": "#d32f2f",
                  "light": "#e57373",
                  "main": "#f44336",
                },
                "getContrastText": [Function],
                "grey": Object {
                  "100": "#f5f5f5",
                  "200": "#eeeeee",
                  "300": "#e0e0e0",
                  "400": "#bdbdbd",
                  "50": "#fafafa",
                  "500": "#9e9e9e",
                  "600": "#757575",
                  "700": "#616161",
                  "800": "#424242",
                  "900": "#212121",
                  "A100": "#d5d5d5",
                  "A200": "#aaaaaa",
                  "A400": "#303030",
                  "A700": "#616161",
                },
                "info": Object {
                  "contrastText": "#fff",
                  "dark": "#1976d2",
                  "light": "#64b5f6",
                  "main": "#2196f3",
                },
                "primary": Object {
                  "contrastText": "#000000",
                  "dark": "rgb(142, 145, 148)",
                  "light": "rgb(214, 217, 220)",
                  "main": "#CCD0D4",
                },
                "secondary": Object {
                  "contrastText": "#ffffff",
                  "dark": "rgb(67, 67, 67)",
                  "light": "rgb(128, 128, 128)",
                  "main": "#616161",
                },
                "success": Object {
                  "contrastText": "rgba(0, 0, 0, 0.87)",
                  "dark": "#388e3c",
                  "light": "#81c784",
                  "main": "#4caf50",
                },
                "text": Object {
                  "disabled": "rgba(255, 255, 255, 0.5)",
                  "hint": "rgba(255, 255, 255, 0.5)",
                  "icon": "rgba(255, 255, 255, 0.5)",
                  "primary": "#fff",
                  "secondary": "#fff",
                },
                "tonalOffset": 0.2,
                "type": "dark",
                "warning": Object {
                  "contrastText": "rgba(0, 0, 0, 0.87)",
                  "dark": "#f57c00",
                  "light": "#ffb74d",
                  "main": "#ff9800",
                },
              },
              "props": Object {},
              "shadows": Array [
                "none",
                "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
              ],
              "shape": Object {
                "borderRadius": 4,
              },
              "spacing": [Function],
              "transitions": Object {
                "create": [Function],
                "duration": Object {
                  "complex": 375,
                  "enteringScreen": 225,
                  "leavingScreen": 195,
                  "short": 250,
                  "shorter": 200,
                  "shortest": 150,
                  "standard": 300,
                },
                "easing": Object {
                  "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                  "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                  "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                  "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                },
                "getAutoHeightDuration": [Function],
              },
              "typography": Object {
                "body1": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.5,
                },
                "body2": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.01071em",
                  "lineHeight": 1.43,
                },
                "button": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.02857em",
                  "lineHeight": 1.75,
                  "textTransform": "uppercase",
                },
                "caption": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.03333em",
                  "lineHeight": 1.66,
                },
                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                "fontSize": 14,
                "fontWeightBold": 700,
                "fontWeightLight": 300,
                "fontWeightMedium": 500,
                "fontWeightRegular": 400,
                "h1": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "6rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.01562em",
                  "lineHeight": 1.167,
                },
                "h2": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3.75rem",
                  "fontWeight": 300,
                  "letterSpacing": "-0.00833em",
                  "lineHeight": 1.2,
                },
                "h3": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "3rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.167,
                },
                "h4": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "2.125rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00735em",
                  "lineHeight": 1.235,
                },
                "h5": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.5rem",
                  "fontWeight": 400,
                  "letterSpacing": "0em",
                  "lineHeight": 1.334,
                },
                "h6": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1.25rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.0075em",
                  "lineHeight": 1.6,
                },
                "htmlFontSize": 16,
                "overline": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.75rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.08333em",
                  "lineHeight": 2.66,
                  "textTransform": "uppercase",
                },
                "pxToRem": [Function],
                "round": [Function],
                "subtitle1": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "1rem",
                  "fontWeight": 400,
                  "letterSpacing": "0.00938em",
                  "lineHeight": 1.75,
                },
                "subtitle2": Object {
                  "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                  "fontSize": "0.875rem",
                  "fontWeight": 500,
                  "letterSpacing": "0.00714em",
                  "lineHeight": 1.57,
                },
              },
              "zIndex": Object {
                "appBar": 1100,
                "drawer": 1200,
                "mobileStepper": 1000,
                "modal": 1300,
                "snackbar": 1400,
                "speedDial": 1050,
                "tooltip": 1500,
              },
              Symbol(mui.nested): false,
            }
          }
        >
          <div
            className="makeStyles-mainContainer-1"
          >
            <CssBaseline />
            <Header
              locale="en"
              onExpand={[Function]}
              onSearchChange={[Function]}
              setLocale={[Function]}
            >
              <WithStyles(ForwardRef(AppBar))
                color="inherit"
                position="sticky"
              >
                <ForwardRef(AppBar)
                  classes={
                    Object {
                      "colorDefault": "MuiAppBar-colorDefault",
                      "colorPrimary": "MuiAppBar-colorPrimary",
                      "colorSecondary": "MuiAppBar-colorSecondary",
                      "positionAbsolute": "MuiAppBar-positionAbsolute",
                      "positionFixed": "MuiAppBar-positionFixed",
                      "positionRelative": "MuiAppBar-positionRelative",
                      "positionStatic": "MuiAppBar-positionStatic",
                      "positionSticky": "MuiAppBar-positionSticky",
                      "root": "MuiAppBar-root",
                    }
                  }
                  color="inherit"
                  position="sticky"
                >
                  <WithStyles(ForwardRef(Paper))
                    className="MuiAppBar-root MuiAppBar-positionSticky"
                    component="header"
                    elevation={4}
                    square={true}
                  >
                    <ForwardRef(Paper)
                      className="MuiAppBar-root MuiAppBar-positionSticky"
                      classes={
                        Object {
                          "elevation0": "MuiPaper-elevation0",
                          "elevation1": "MuiPaper-elevation1",
                          "elevation10": "MuiPaper-elevation10",
                          "elevation11": "MuiPaper-elevation11",
                          "elevation12": "MuiPaper-elevation12",
                          "elevation13": "MuiPaper-elevation13",
                          "elevation14": "MuiPaper-elevation14",
                          "elevation15": "MuiPaper-elevation15",
                          "elevation16": "MuiPaper-elevation16",
                          "elevation17": "MuiPaper-elevation17",
                          "elevation18": "MuiPaper-elevation18",
                          "elevation19": "MuiPaper-elevation19",
                          "elevation2": "MuiPaper-elevation2",
                          "elevation20": "MuiPaper-elevation20",
                          "elevation21": "MuiPaper-elevation21",
                          "elevation22": "MuiPaper-elevation22",
                          "elevation23": "MuiPaper-elevation23",
                          "elevation24": "MuiPaper-elevation24",
                          "elevation3": "MuiPaper-elevation3",
                          "elevation4": "MuiPaper-elevation4",
                          "elevation5": "MuiPaper-elevation5",
                          "elevation6": "MuiPaper-elevation6",
                          "elevation7": "MuiPaper-elevation7",
                          "elevation8": "MuiPaper-elevation8",
                          "elevation9": "MuiPaper-elevation9",
                          "outlined": "MuiPaper-outlined",
                          "root": "MuiPaper-root",
                          "rounded": "MuiPaper-rounded",
                        }
                      }
                      component="header"
                      elevation={4}
                      square={true}
                    >
                      <header
                        className="MuiPaper-root MuiAppBar-root MuiAppBar-positionSticky MuiPaper-elevation4"
                      >
                        <WithStyles(ForwardRef(Toolbar))>
                          <ForwardRef(Toolbar)
                            classes={
                              Object {
                                "dense": "MuiToolbar-dense",
                                "gutters": "MuiToolbar-gutters",
                                "regular": "MuiToolbar-regular",
                                "root": "MuiToolbar-root",
                              }
                            }
                          >
                            <div
                              className="MuiToolbar-root MuiToolbar-regular MuiToolbar-gutters"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="makeStyles-title-6"
                                variant="h6"
                              >
                                <ForwardRef(Typography)
                                  className="makeStyles-title-6"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  variant="h6"
                                >
                                  <h6
                                    className="MuiTypography-root makeStyles-title-6 MuiTypography-h6"
                                  >
                                    <Link
                                      className="makeStyles-titleLink-4"
                                      to="/"
                                    >
                                      <LinkAnchor
                                        className="makeStyles-titleLink-4"
                                        href="/"
                                        navigate={[Function]}
                                      >
                                        <a
                                          className="makeStyles-titleLink-4"
                                          href="/"
                                          onClick={[Function]}
                                        >
                                          Hypertube
                                        </a>
                                      </LinkAnchor>
                                    </Link>
                                  </h6>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                              <div
                                className="makeStyles-headerContent-7"
                              >
                                <WithStyles(ForwardRef(OutlinedInput))
                                  className="makeStyles-searchInput-8"
                                  id="menuitem-search"
                                  labelWidth={0}
                                  onChange={[Function]}
                                  onClick={[Function]}
                                  placeholder="Search a film, an author..."
                                  startAdornment={
                                    <UNDEFINED
                                      className="makeStyles-inputLabel-10"
                                    />
                                  }
                                >
                                  <ForwardRef(OutlinedInput)
                                    className="makeStyles-searchInput-8"
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                        "adornedStart": "MuiOutlinedInput-adornedStart",
                                        "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                        "disabled": "Mui-disabled",
                                        "error": "Mui-error",
                                        "focused": "Mui-focused",
                                        "input": "MuiOutlinedInput-input",
                                        "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                        "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                        "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                        "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                        "marginDense": "MuiOutlinedInput-marginDense",
                                        "multiline": "MuiOutlinedInput-multiline",
                                        "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                        "root": "MuiOutlinedInput-root",
                                      }
                                    }
                                    id="menuitem-search"
                                    labelWidth={0}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    placeholder="Search a film, an author..."
                                    startAdornment={
                                      <UNDEFINED
                                        className="makeStyles-inputLabel-10"
                                      />
                                    }
                                  >
                                    <WithStyles(ForwardRef(InputBase))
                                      className="makeStyles-searchInput-8"
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                          "adornedStart": "MuiOutlinedInput-adornedStart",
                                          "colorSecondary": "MuiOutlinedInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "input": "MuiOutlinedInput-input",
                                          "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                          "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                          "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                          "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                          "marginDense": "MuiOutlinedInput-marginDense",
                                          "multiline": "MuiOutlinedInput-multiline",
                                          "notchedOutline": null,
                                          "root": "MuiOutlinedInput-root",
                                        }
                                      }
                                      fullWidth={false}
                                      id="menuitem-search"
                                      inputComponent="input"
                                      multiline={false}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      placeholder="Search a film, an author..."
                                      renderSuffix={[Function]}
                                      startAdornment={
                                        <UNDEFINED
                                          className="makeStyles-inputLabel-10"
                                        />
                                      }
                                      type="text"
                                    >
                                      <ForwardRef(InputBase)
                                        className="makeStyles-searchInput-8"
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                            "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                            "colorSecondary": "MuiInputBase-colorSecondary MuiOutlinedInput-colorSecondary",
                                            "disabled": "Mui-disabled Mui-disabled",
                                            "error": "Mui-error Mui-error",
                                            "focused": "Mui-focused Mui-focused",
                                            "formControl": "MuiInputBase-formControl",
                                            "fullWidth": "MuiInputBase-fullWidth",
                                            "input": "MuiInputBase-input MuiOutlinedInput-input",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                            "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                            "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                            "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                            "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                            "root": "MuiInputBase-root MuiOutlinedInput-root",
                                          }
                                        }
                                        fullWidth={false}
                                        id="menuitem-search"
                                        inputComponent="input"
                                        multiline={false}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        placeholder="Search a film, an author..."
                                        renderSuffix={[Function]}
                                        startAdornment={
                                          <UNDEFINED
                                            className="makeStyles-inputLabel-10"
                                          />
                                        }
                                        type="text"
                                      >
                                        <div
                                          className="MuiInputBase-root MuiOutlinedInput-root makeStyles-searchInput-8 MuiInputBase-adornedStart MuiOutlinedInput-adornedStart"
                                          onClick={[Function]}
                                        >
                                          <ForwardRef
                                            className="makeStyles-inputLabel-10"
                                          >
                                            <WithStyles(ForwardRef(SvgIcon))
                                              className="makeStyles-inputLabel-10"
                                            >
                                              <ForwardRef(SvgIcon)
                                                className="makeStyles-inputLabel-10"
                                                classes={
                                                  Object {
                                                    "colorAction": "MuiSvgIcon-colorAction",
                                                    "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                    "colorError": "MuiSvgIcon-colorError",
                                                    "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                    "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                    "root": "MuiSvgIcon-root",
                                                  }
                                                }
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  className="MuiSvgIcon-root makeStyles-inputLabel-10"
                                                  focusable="false"
                                                  role="presentation"
                                                  viewBox="0 0 24 24"
                                                >
                                                  <path
                                                    d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                                  />
                                                </svg>
                                              </ForwardRef(SvgIcon)>
                                            </WithStyles(ForwardRef(SvgIcon))>
                                          </ForwardRef>
                                          <input
                                            className="MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart"
                                            id="menuitem-search"
                                            onAnimationStart={[Function]}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            placeholder="Search a film, an author..."
                                            type="text"
                                          />
                                          <WithStyles(ForwardRef(NotchedOutline))
                                            className="MuiOutlinedInput-notchedOutline"
                                            labelWidth={0}
                                            notched={true}
                                          >
                                            <ForwardRef(NotchedOutline)
                                              className="MuiOutlinedInput-notchedOutline"
                                              classes={
                                                Object {
                                                  "legend": "PrivateNotchedOutline-legend-128",
                                                  "root": "PrivateNotchedOutline-root-127",
                                                }
                                              }
                                              labelWidth={0}
                                              notched={true}
                                            >
                                              <fieldset
                                                aria-hidden={true}
                                                className="PrivateNotchedOutline-root-127 MuiOutlinedInput-notchedOutline"
                                                style={
                                                  Object {
                                                    "paddingLeft": 8,
                                                  }
                                                }
                                              >
                                                <legend
                                                  className="PrivateNotchedOutline-legend-128"
                                                  style={
                                                    Object {
                                                      "width": 0,
                                                    }
                                                  }
                                                >
                                                  <span
                                                    dangerouslySetInnerHTML={
                                                      Object {
                                                        "__html": "&#8203;",
                                                      }
                                                    }
                                                  />
                                                </legend>
                                              </fieldset>
                                            </ForwardRef(NotchedOutline)>
                                          </WithStyles(ForwardRef(NotchedOutline))>
                                        </div>
                                      </ForwardRef(InputBase)>
                                    </WithStyles(ForwardRef(InputBase))>
                                  </ForwardRef(OutlinedInput)>
                                </WithStyles(ForwardRef(OutlinedInput))>
                                <div
                                  className="makeStyles-buttonsMenu-5"
                                >
                                  <WithStyles(ForwardRef(IconButton))
                                    className="makeStyles-headerButtons-11"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      className="makeStyles-headerButtons-11"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root makeStyles-headerButtons-11"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root makeStyles-headerButtons-11"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root makeStyles-headerButtons-11"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <span
                                                className="makeStyles-flagIcon-9"
                                              >
                                                ðŸ‡¬ðŸ‡§
                                              </span>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(Menu))
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                          }
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        keepMounted={true}
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                            }
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          keepMounted={true}
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            keepMounted={true}
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <ForwardRef(Portal)
                                              disablePortal={false}
                                            >
                                              <Portal
                                                containerInfo={
                                                  <body>
                                                    <div
                                                      aria-hidden="true"
                                                      class="MuiPopover-root"
                                                      role="presentation"
                                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                    >
                                                      <div
                                                        data-test="sentinelStart"
                                                        tabindex="0"
                                                      />
                                                      <div
                                                        class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                        tabindex="-1"
                                                      >
                                                        <ul
                                                          class="MuiList-root MuiMenu-list MuiList-padding"
                                                          role="menu"
                                                          tabindex="-1"
                                                        >
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="0"
                                                          >
                                                            ðŸ‡«ðŸ‡·
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="-1"
                                                          >
                                                            ðŸ‡¬ðŸ‡§
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                        </ul>
                                                      </div>
                                                      <div
                                                        data-test="sentinelEnd"
                                                        tabindex="0"
                                                      />
                                                    </div>
                                                    <div
                                                      aria-hidden="true"
                                                      class="MuiPopover-root"
                                                      role="presentation"
                                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                    >
                                                      <div
                                                        data-test="sentinelStart"
                                                        tabindex="0"
                                                      />
                                                      <div
                                                        class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                        tabindex="-1"
                                                      >
                                                        <ul
                                                          class="MuiList-root MuiMenu-list MuiList-padding"
                                                          role="menu"
                                                          tabindex="-1"
                                                        >
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="0"
                                                          >
                                                            My profile
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="-1"
                                                          >
                                                            Disconnect
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                        </ul>
                                                      </div>
                                                      <div
                                                        data-test="sentinelEnd"
                                                        tabindex="0"
                                                      />
                                                    </div>
                                                  </body>
                                                }
                                              >
                                                <div
                                                  className="MuiPopover-root"
                                                  onKeyDown={[Function]}
                                                  role="presentation"
                                                  style={
                                                    Object {
                                                      "bottom": 0,
                                                      "left": 0,
                                                      "position": "fixed",
                                                      "right": 0,
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "zIndex": 1300,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SimpleBackdrop)
                                                    invisible={true}
                                                    onClick={[Function]}
                                                    open={false}
                                                  />
                                                  <TrapFocus
                                                    disableAutoFocus={false}
                                                    disableEnforceFocus={false}
                                                    disableRestoreFocus={false}
                                                    getDoc={[Function]}
                                                    isEnabled={[Function]}
                                                    open={false}
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabIndex={0}
                                                    />
                                                    <ForwardRef(Grow)
                                                      appear={true}
                                                      in={false}
                                                      onEnter={[Function]}
                                                      onEntering={[Function]}
                                                      onExited={[Function]}
                                                      tabIndex="-1"
                                                      timeout="auto"
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={true}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        tabIndex="-1"
                                                        timeout={null}
                                                        unmountOnExit={false}
                                                      >
                                                        <WithStyles(ForwardRef(Paper))
                                                          className="MuiPopover-paper"
                                                          classes={
                                                            Object {
                                                              "root": "MuiMenu-paper",
                                                            }
                                                          }
                                                          elevation={8}
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <ForwardRef(Paper)
                                                            className="MuiPopover-paper"
                                                            classes={
                                                              Object {
                                                                "elevation0": "MuiPaper-elevation0",
                                                                "elevation1": "MuiPaper-elevation1",
                                                                "elevation10": "MuiPaper-elevation10",
                                                                "elevation11": "MuiPaper-elevation11",
                                                                "elevation12": "MuiPaper-elevation12",
                                                                "elevation13": "MuiPaper-elevation13",
                                                                "elevation14": "MuiPaper-elevation14",
                                                                "elevation15": "MuiPaper-elevation15",
                                                                "elevation16": "MuiPaper-elevation16",
                                                                "elevation17": "MuiPaper-elevation17",
                                                                "elevation18": "MuiPaper-elevation18",
                                                                "elevation19": "MuiPaper-elevation19",
                                                                "elevation2": "MuiPaper-elevation2",
                                                                "elevation20": "MuiPaper-elevation20",
                                                                "elevation21": "MuiPaper-elevation21",
                                                                "elevation22": "MuiPaper-elevation22",
                                                                "elevation23": "MuiPaper-elevation23",
                                                                "elevation24": "MuiPaper-elevation24",
                                                                "elevation3": "MuiPaper-elevation3",
                                                                "elevation4": "MuiPaper-elevation4",
                                                                "elevation5": "MuiPaper-elevation5",
                                                                "elevation6": "MuiPaper-elevation6",
                                                                "elevation7": "MuiPaper-elevation7",
                                                                "elevation8": "MuiPaper-elevation8",
                                                                "elevation9": "MuiPaper-elevation9",
                                                                "outlined": "MuiPaper-outlined",
                                                                "root": "MuiPaper-root MuiMenu-paper",
                                                                "rounded": "MuiPaper-rounded",
                                                              }
                                                            }
                                                            elevation={8}
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                                "transform": "scale(0.75, 0.5625)",
                                                                "visibility": "hidden",
                                                              }
                                                            }
                                                            tabIndex="-1"
                                                          >
                                                            <div
                                                              className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                  "transform": "scale(0.75, 0.5625)",
                                                                  "visibility": "hidden",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <ForwardRef(MenuList)
                                                                actions={
                                                                  Object {
                                                                    "current": Object {
                                                                      "adjustStyleForScrollbar": [Function],
                                                                    },
                                                                  }
                                                                }
                                                                autoFocus={false}
                                                                autoFocusItem={false}
                                                                className="MuiMenu-list"
                                                                onKeyDown={[Function]}
                                                                variant="selectedMenu"
                                                              >
                                                                <WithStyles(ForwardRef(List))
                                                                  className="MuiMenu-list"
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ForwardRef(List)
                                                                    className="MuiMenu-list"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiList-dense",
                                                                        "padding": "MuiList-padding",
                                                                        "root": "MuiList-root",
                                                                        "subheader": "MuiList-subheader",
                                                                      }
                                                                    }
                                                                    onKeyDown={[Function]}
                                                                    role="menu"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ul
                                                                      className="MuiList-root MuiMenu-list MuiList-padding"
                                                                      onKeyDown={[Function]}
                                                                      role="menu"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        key=".$.0"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <ForwardRef(MenuItem)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                              "gutters": "MuiMenuItem-gutters",
                                                                              "root": "MuiMenuItem-root",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          onClick={[Function]}
                                                                          tabIndex={0}
                                                                        >
                                                                          <WithStyles(ForwardRef(ListItem))
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "dense": "MuiMenuItem-dense",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <ForwardRef(ListItem)
                                                                              button={true}
                                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                              classes={
                                                                                Object {
                                                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                  "button": "MuiListItem-button",
                                                                                  "container": "MuiListItem-container",
                                                                                  "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "divider": "MuiListItem-divider",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "gutters": "MuiListItem-gutters",
                                                                                  "root": "MuiListItem-root",
                                                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                                                  "selected": "Mui-selected",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disableGutters={false}
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="li"
                                                                                  disabled={false}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <li
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    ðŸ‡«ðŸ‡·
                                                                                    <NoSsr>
                                                                                      <WithStyles(undefined)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "MuiTouchRipple-child",
                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                              "root": "MuiTouchRipple-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="MuiTouchRipple-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(undefined)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(ListItem)>
                                                                          </WithStyles(ForwardRef(ListItem))>
                                                                        </ForwardRef(MenuItem)>
                                                                      </WithStyles(ForwardRef(MenuItem))>
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        key=".$.1"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <ForwardRef(MenuItem)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                              "gutters": "MuiMenuItem-gutters",
                                                                              "root": "MuiMenuItem-root",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          onClick={[Function]}
                                                                        >
                                                                          <WithStyles(ForwardRef(ListItem))
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "dense": "MuiMenuItem-dense",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(ListItem)
                                                                              button={true}
                                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                              classes={
                                                                                Object {
                                                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                  "button": "MuiListItem-button",
                                                                                  "container": "MuiListItem-container",
                                                                                  "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "divider": "MuiListItem-divider",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "gutters": "MuiListItem-gutters",
                                                                                  "root": "MuiListItem-root",
                                                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                                                  "selected": "Mui-selected",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disableGutters={false}
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="li"
                                                                                  disabled={false}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={-1}
                                                                                >
                                                                                  <li
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={-1}
                                                                                  >
                                                                                    ðŸ‡¬ðŸ‡§
                                                                                    <NoSsr>
                                                                                      <WithStyles(undefined)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "MuiTouchRipple-child",
                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                              "root": "MuiTouchRipple-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="MuiTouchRipple-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(undefined)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(ListItem)>
                                                                          </WithStyles(ForwardRef(ListItem))>
                                                                        </ForwardRef(MenuItem)>
                                                                      </WithStyles(ForwardRef(MenuItem))>
                                                                    </ul>
                                                                  </ForwardRef(List)>
                                                                </WithStyles(ForwardRef(List))>
                                                              </ForwardRef(MenuList)>
                                                            </div>
                                                          </ForwardRef(Paper)>
                                                        </WithStyles(ForwardRef(Paper))>
                                                      </Transition>
                                                    </ForwardRef(Grow)>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabIndex={0}
                                                    />
                                                  </TrapFocus>
                                                </div>
                                              </Portal>
                                            </ForwardRef(Portal)>
                                          </ForwardRef(Modal)>
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                  <WithStyles(ForwardRef(IconButton))
                                    className="makeStyles-headerButtons-11"
                                    onClick={[Function]}
                                  >
                                    <ForwardRef(IconButton)
                                      className="makeStyles-headerButtons-11"
                                      classes={
                                        Object {
                                          "colorInherit": "MuiIconButton-colorInherit",
                                          "colorPrimary": "MuiIconButton-colorPrimary",
                                          "colorSecondary": "MuiIconButton-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "edgeEnd": "MuiIconButton-edgeEnd",
                                          "edgeStart": "MuiIconButton-edgeStart",
                                          "label": "MuiIconButton-label",
                                          "root": "MuiIconButton-root",
                                          "sizeSmall": "MuiIconButton-sizeSmall",
                                        }
                                      }
                                      onClick={[Function]}
                                    >
                                      <WithStyles(ForwardRef(ButtonBase))
                                        centerRipple={true}
                                        className="MuiIconButton-root makeStyles-headerButtons-11"
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                      >
                                        <ForwardRef(ButtonBase)
                                          centerRipple={true}
                                          className="MuiIconButton-root makeStyles-headerButtons-11"
                                          classes={
                                            Object {
                                              "disabled": "Mui-disabled",
                                              "focusVisible": "Mui-focusVisible",
                                              "root": "MuiButtonBase-root",
                                            }
                                          }
                                          disabled={false}
                                          focusRipple={true}
                                          onClick={[Function]}
                                        >
                                          <button
                                            className="MuiButtonBase-root MuiIconButton-root makeStyles-headerButtons-11"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <span
                                              className="MuiIconButton-label"
                                            >
                                              <ForwardRef>
                                                <WithStyles(ForwardRef(SvgIcon))>
                                                  <ForwardRef(SvgIcon)
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                        "colorError": "MuiSvgIcon-colorError",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                        "root": "MuiSvgIcon-root",
                                                      }
                                                    }
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"
                                                      />
                                                    </svg>
                                                  </ForwardRef(SvgIcon)>
                                                </WithStyles(ForwardRef(SvgIcon))>
                                              </ForwardRef>
                                            </span>
                                            <NoSsr>
                                              <WithStyles(undefined)
                                                center={true}
                                              >
                                                <ForwardRef(TouchRipple)
                                                  center={true}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child",
                                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                                      "ripple": "MuiTouchRipple-ripple",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                      "root": "MuiTouchRipple-root",
                                                    }
                                                  }
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </ForwardRef(TouchRipple)>
                                              </WithStyles(undefined)>
                                            </NoSsr>
                                          </button>
                                        </ForwardRef(ButtonBase)>
                                      </WithStyles(ForwardRef(ButtonBase))>
                                    </ForwardRef(IconButton)>
                                  </WithStyles(ForwardRef(IconButton))>
                                  <WithStyles(ForwardRef(Menu))
                                    keepMounted={true}
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      keepMounted={true}
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                          }
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        keepMounted={true}
                                        onClose={[Function]}
                                        onEntering={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                            }
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          keepMounted={true}
                                          onClose={[Function]}
                                          onEntering={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            keepMounted={true}
                                            onClose={[Function]}
                                            open={false}
                                          >
                                            <ForwardRef(Portal)
                                              disablePortal={false}
                                            >
                                              <Portal
                                                containerInfo={
                                                  <body>
                                                    <div
                                                      aria-hidden="true"
                                                      class="MuiPopover-root"
                                                      role="presentation"
                                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                    >
                                                      <div
                                                        data-test="sentinelStart"
                                                        tabindex="0"
                                                      />
                                                      <div
                                                        class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                        tabindex="-1"
                                                      >
                                                        <ul
                                                          class="MuiList-root MuiMenu-list MuiList-padding"
                                                          role="menu"
                                                          tabindex="-1"
                                                        >
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="0"
                                                          >
                                                            ðŸ‡«ðŸ‡·
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="-1"
                                                          >
                                                            ðŸ‡¬ðŸ‡§
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                        </ul>
                                                      </div>
                                                      <div
                                                        data-test="sentinelEnd"
                                                        tabindex="0"
                                                      />
                                                    </div>
                                                    <div
                                                      aria-hidden="true"
                                                      class="MuiPopover-root"
                                                      role="presentation"
                                                      style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px; visibility: hidden;"
                                                    >
                                                      <div
                                                        data-test="sentinelStart"
                                                        tabindex="0"
                                                      />
                                                      <div
                                                        class="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                        style="opacity: 0; transform: scale(0.75, 0.5625); visibility: hidden;"
                                                        tabindex="-1"
                                                      >
                                                        <ul
                                                          class="MuiList-root MuiMenu-list MuiList-padding"
                                                          role="menu"
                                                          tabindex="-1"
                                                        >
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="0"
                                                          >
                                                            My profile
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                          <li
                                                            aria-disabled="false"
                                                            class="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                            role="menuitem"
                                                            tabindex="-1"
                                                          >
                                                            Disconnect
                                                            <span
                                                              class="MuiTouchRipple-root"
                                                            />
                                                          </li>
                                                        </ul>
                                                      </div>
                                                      <div
                                                        data-test="sentinelEnd"
                                                        tabindex="0"
                                                      />
                                                    </div>
                                                  </body>
                                                }
                                              >
                                                <div
                                                  className="MuiPopover-root"
                                                  onKeyDown={[Function]}
                                                  role="presentation"
                                                  style={
                                                    Object {
                                                      "bottom": 0,
                                                      "left": 0,
                                                      "position": "fixed",
                                                      "right": 0,
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "zIndex": 1300,
                                                    }
                                                  }
                                                >
                                                  <ForwardRef(SimpleBackdrop)
                                                    invisible={true}
                                                    onClick={[Function]}
                                                    open={false}
                                                  />
                                                  <TrapFocus
                                                    disableAutoFocus={false}
                                                    disableEnforceFocus={false}
                                                    disableRestoreFocus={false}
                                                    getDoc={[Function]}
                                                    isEnabled={[Function]}
                                                    open={false}
                                                  >
                                                    <div
                                                      data-test="sentinelStart"
                                                      tabIndex={0}
                                                    />
                                                    <ForwardRef(Grow)
                                                      appear={true}
                                                      in={false}
                                                      onEnter={[Function]}
                                                      onEntering={[Function]}
                                                      onExited={[Function]}
                                                      tabIndex="-1"
                                                      timeout="auto"
                                                    >
                                                      <Transition
                                                        addEndListener={[Function]}
                                                        appear={true}
                                                        enter={true}
                                                        exit={true}
                                                        in={false}
                                                        mountOnEnter={false}
                                                        onEnter={[Function]}
                                                        onEntered={[Function]}
                                                        onEntering={[Function]}
                                                        onExit={[Function]}
                                                        onExited={[Function]}
                                                        onExiting={[Function]}
                                                        tabIndex="-1"
                                                        timeout={null}
                                                        unmountOnExit={false}
                                                      >
                                                        <WithStyles(ForwardRef(Paper))
                                                          className="MuiPopover-paper"
                                                          classes={
                                                            Object {
                                                              "root": "MuiMenu-paper",
                                                            }
                                                          }
                                                          elevation={8}
                                                          style={
                                                            Object {
                                                              "opacity": 0,
                                                              "transform": "scale(0.75, 0.5625)",
                                                              "visibility": "hidden",
                                                            }
                                                          }
                                                          tabIndex="-1"
                                                        >
                                                          <ForwardRef(Paper)
                                                            className="MuiPopover-paper"
                                                            classes={
                                                              Object {
                                                                "elevation0": "MuiPaper-elevation0",
                                                                "elevation1": "MuiPaper-elevation1",
                                                                "elevation10": "MuiPaper-elevation10",
                                                                "elevation11": "MuiPaper-elevation11",
                                                                "elevation12": "MuiPaper-elevation12",
                                                                "elevation13": "MuiPaper-elevation13",
                                                                "elevation14": "MuiPaper-elevation14",
                                                                "elevation15": "MuiPaper-elevation15",
                                                                "elevation16": "MuiPaper-elevation16",
                                                                "elevation17": "MuiPaper-elevation17",
                                                                "elevation18": "MuiPaper-elevation18",
                                                                "elevation19": "MuiPaper-elevation19",
                                                                "elevation2": "MuiPaper-elevation2",
                                                                "elevation20": "MuiPaper-elevation20",
                                                                "elevation21": "MuiPaper-elevation21",
                                                                "elevation22": "MuiPaper-elevation22",
                                                                "elevation23": "MuiPaper-elevation23",
                                                                "elevation24": "MuiPaper-elevation24",
                                                                "elevation3": "MuiPaper-elevation3",
                                                                "elevation4": "MuiPaper-elevation4",
                                                                "elevation5": "MuiPaper-elevation5",
                                                                "elevation6": "MuiPaper-elevation6",
                                                                "elevation7": "MuiPaper-elevation7",
                                                                "elevation8": "MuiPaper-elevation8",
                                                                "elevation9": "MuiPaper-elevation9",
                                                                "outlined": "MuiPaper-outlined",
                                                                "root": "MuiPaper-root MuiMenu-paper",
                                                                "rounded": "MuiPaper-rounded",
                                                              }
                                                            }
                                                            elevation={8}
                                                            style={
                                                              Object {
                                                                "opacity": 0,
                                                                "transform": "scale(0.75, 0.5625)",
                                                                "visibility": "hidden",
                                                              }
                                                            }
                                                            tabIndex="-1"
                                                          >
                                                            <div
                                                              className="MuiPaper-root MuiMenu-paper MuiPopover-paper MuiPaper-elevation8 MuiPaper-rounded"
                                                              style={
                                                                Object {
                                                                  "opacity": 0,
                                                                  "transform": "scale(0.75, 0.5625)",
                                                                  "visibility": "hidden",
                                                                }
                                                              }
                                                              tabIndex="-1"
                                                            >
                                                              <ForwardRef(MenuList)
                                                                actions={
                                                                  Object {
                                                                    "current": Object {
                                                                      "adjustStyleForScrollbar": [Function],
                                                                    },
                                                                  }
                                                                }
                                                                autoFocus={false}
                                                                autoFocusItem={false}
                                                                className="MuiMenu-list"
                                                                onKeyDown={[Function]}
                                                                variant="selectedMenu"
                                                              >
                                                                <WithStyles(ForwardRef(List))
                                                                  className="MuiMenu-list"
                                                                  onKeyDown={[Function]}
                                                                  role="menu"
                                                                  tabIndex={-1}
                                                                >
                                                                  <ForwardRef(List)
                                                                    className="MuiMenu-list"
                                                                    classes={
                                                                      Object {
                                                                        "dense": "MuiList-dense",
                                                                        "padding": "MuiList-padding",
                                                                        "root": "MuiList-root",
                                                                        "subheader": "MuiList-subheader",
                                                                      }
                                                                    }
                                                                    onKeyDown={[Function]}
                                                                    role="menu"
                                                                    tabIndex={-1}
                                                                  >
                                                                    <ul
                                                                      className="MuiList-root MuiMenu-list MuiList-padding"
                                                                      onKeyDown={[Function]}
                                                                      role="menu"
                                                                      tabIndex={-1}
                                                                    >
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        key=".$.0"
                                                                        onClick={[Function]}
                                                                        tabIndex={0}
                                                                      >
                                                                        <ForwardRef(MenuItem)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                              "gutters": "MuiMenuItem-gutters",
                                                                              "root": "MuiMenuItem-root",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          onClick={[Function]}
                                                                          tabIndex={0}
                                                                        >
                                                                          <WithStyles(ForwardRef(ListItem))
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "dense": "MuiMenuItem-dense",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={0}
                                                                          >
                                                                            <ForwardRef(ListItem)
                                                                              button={true}
                                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                              classes={
                                                                                Object {
                                                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                  "button": "MuiListItem-button",
                                                                                  "container": "MuiListItem-container",
                                                                                  "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "divider": "MuiListItem-divider",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "gutters": "MuiListItem-gutters",
                                                                                  "root": "MuiListItem-root",
                                                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                                                  "selected": "Mui-selected",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disableGutters={false}
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={0}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={0}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="li"
                                                                                  disabled={false}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={0}
                                                                                >
                                                                                  <li
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={0}
                                                                                  >
                                                                                    My profile
                                                                                    <NoSsr>
                                                                                      <WithStyles(undefined)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "MuiTouchRipple-child",
                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                              "root": "MuiTouchRipple-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="MuiTouchRipple-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(undefined)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(ListItem)>
                                                                          </WithStyles(ForwardRef(ListItem))>
                                                                        </ForwardRef(MenuItem)>
                                                                      </WithStyles(ForwardRef(MenuItem))>
                                                                      <WithStyles(ForwardRef(MenuItem))
                                                                        key=".$.1"
                                                                        onClick={[Function]}
                                                                      >
                                                                        <ForwardRef(MenuItem)
                                                                          classes={
                                                                            Object {
                                                                              "dense": "MuiMenuItem-dense",
                                                                              "gutters": "MuiMenuItem-gutters",
                                                                              "root": "MuiMenuItem-root",
                                                                              "selected": "Mui-selected",
                                                                            }
                                                                          }
                                                                          onClick={[Function]}
                                                                        >
                                                                          <WithStyles(ForwardRef(ListItem))
                                                                            button={true}
                                                                            className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                            classes={
                                                                              Object {
                                                                                "dense": "MuiMenuItem-dense",
                                                                              }
                                                                            }
                                                                            component="li"
                                                                            disableGutters={false}
                                                                            onClick={[Function]}
                                                                            role="menuitem"
                                                                            tabIndex={-1}
                                                                          >
                                                                            <ForwardRef(ListItem)
                                                                              button={true}
                                                                              className="MuiMenuItem-root MuiMenuItem-gutters"
                                                                              classes={
                                                                                Object {
                                                                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                                                                  "button": "MuiListItem-button",
                                                                                  "container": "MuiListItem-container",
                                                                                  "dense": "MuiListItem-dense MuiMenuItem-dense",
                                                                                  "disabled": "Mui-disabled",
                                                                                  "divider": "MuiListItem-divider",
                                                                                  "focusVisible": "Mui-focusVisible",
                                                                                  "gutters": "MuiListItem-gutters",
                                                                                  "root": "MuiListItem-root",
                                                                                  "secondaryAction": "MuiListItem-secondaryAction",
                                                                                  "selected": "Mui-selected",
                                                                                }
                                                                              }
                                                                              component="li"
                                                                              disableGutters={false}
                                                                              onClick={[Function]}
                                                                              role="menuitem"
                                                                              tabIndex={-1}
                                                                            >
                                                                              <WithStyles(ForwardRef(ButtonBase))
                                                                                className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                component="li"
                                                                                disabled={false}
                                                                                focusVisibleClassName="Mui-focusVisible"
                                                                                onClick={[Function]}
                                                                                role="menuitem"
                                                                                tabIndex={-1}
                                                                              >
                                                                                <ForwardRef(ButtonBase)
                                                                                  className="MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                  classes={
                                                                                    Object {
                                                                                      "disabled": "Mui-disabled",
                                                                                      "focusVisible": "Mui-focusVisible",
                                                                                      "root": "MuiButtonBase-root",
                                                                                    }
                                                                                  }
                                                                                  component="li"
                                                                                  disabled={false}
                                                                                  focusVisibleClassName="Mui-focusVisible"
                                                                                  onClick={[Function]}
                                                                                  role="menuitem"
                                                                                  tabIndex={-1}
                                                                                >
                                                                                  <li
                                                                                    aria-disabled={false}
                                                                                    className="MuiButtonBase-root MuiListItem-root MuiMenuItem-root MuiMenuItem-gutters MuiListItem-gutters MuiListItem-button"
                                                                                    onBlur={[Function]}
                                                                                    onClick={[Function]}
                                                                                    onDragLeave={[Function]}
                                                                                    onFocus={[Function]}
                                                                                    onKeyDown={[Function]}
                                                                                    onKeyUp={[Function]}
                                                                                    onMouseDown={[Function]}
                                                                                    onMouseLeave={[Function]}
                                                                                    onMouseUp={[Function]}
                                                                                    onTouchEnd={[Function]}
                                                                                    onTouchMove={[Function]}
                                                                                    onTouchStart={[Function]}
                                                                                    role="menuitem"
                                                                                    tabIndex={-1}
                                                                                  >
                                                                                    Disconnect
                                                                                    <NoSsr>
                                                                                      <WithStyles(undefined)
                                                                                        center={false}
                                                                                      >
                                                                                        <ForwardRef(TouchRipple)
                                                                                          center={false}
                                                                                          classes={
                                                                                            Object {
                                                                                              "child": "MuiTouchRipple-child",
                                                                                              "childLeaving": "MuiTouchRipple-childLeaving",
                                                                                              "childPulsate": "MuiTouchRipple-childPulsate",
                                                                                              "ripple": "MuiTouchRipple-ripple",
                                                                                              "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                                              "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                                              "root": "MuiTouchRipple-root",
                                                                                            }
                                                                                          }
                                                                                        >
                                                                                          <span
                                                                                            className="MuiTouchRipple-root"
                                                                                          >
                                                                                            <TransitionGroup
                                                                                              childFactory={[Function]}
                                                                                              component={null}
                                                                                              exit={true}
                                                                                            />
                                                                                          </span>
                                                                                        </ForwardRef(TouchRipple)>
                                                                                      </WithStyles(undefined)>
                                                                                    </NoSsr>
                                                                                  </li>
                                                                                </ForwardRef(ButtonBase)>
                                                                              </WithStyles(ForwardRef(ButtonBase))>
                                                                            </ForwardRef(ListItem)>
                                                                          </WithStyles(ForwardRef(ListItem))>
                                                                        </ForwardRef(MenuItem)>
                                                                      </WithStyles(ForwardRef(MenuItem))>
                                                                    </ul>
                                                                  </ForwardRef(List)>
                                                                </WithStyles(ForwardRef(List))>
                                                              </ForwardRef(MenuList)>
                                                            </div>
                                                          </ForwardRef(Paper)>
                                                        </WithStyles(ForwardRef(Paper))>
                                                      </Transition>
                                                    </ForwardRef(Grow)>
                                                    <div
                                                      data-test="sentinelEnd"
                                                      tabIndex={0}
                                                    />
                                                  </TrapFocus>
                                                </div>
                                              </Portal>
                                            </ForwardRef(Portal)>
                                          </ForwardRef(Modal)>
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </div>
                              </div>
                            </div>
                          </ForwardRef(Toolbar)>
                        </WithStyles(ForwardRef(Toolbar))>
                      </header>
                    </ForwardRef(Paper)>
                  </WithStyles(ForwardRef(Paper))>
                </ForwardRef(AppBar)>
              </WithStyles(ForwardRef(AppBar))>
            </Header>
            <Styled(MuiBox)
              className="makeStyles-contentContainer-2"
            >
              <div
                className="MuiBox-root MuiBox-root-146 makeStyles-contentContainer-2"
              >
                <Styled(MuiBox)>
                  <div
                    className="MuiBox-root MuiBox-root-147"
                  >
                    <Switch>
                      <CustomRoute
                        authComponent={[Function]}
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                        exact={true}
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        notAuthComponent={[Function]}
                        path="/"
                      >
                        <Route
                          exact={true}
                          path="/"
                          render={[Function]}
                        >
                          <Loading>
                            <WithStyles(ForwardRef(Grid))
                              className="makeStyles-center-148"
                              container={true}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-center-148"
                                classes={
                                  Object {
                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                    "container": "MuiGrid-container",
                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                    "grid-md-1": "MuiGrid-grid-md-1",
                                    "grid-md-10": "MuiGrid-grid-md-10",
                                    "grid-md-11": "MuiGrid-grid-md-11",
                                    "grid-md-12": "MuiGrid-grid-md-12",
                                    "grid-md-2": "MuiGrid-grid-md-2",
                                    "grid-md-3": "MuiGrid-grid-md-3",
                                    "grid-md-4": "MuiGrid-grid-md-4",
                                    "grid-md-5": "MuiGrid-grid-md-5",
                                    "grid-md-6": "MuiGrid-grid-md-6",
                                    "grid-md-7": "MuiGrid-grid-md-7",
                                    "grid-md-8": "MuiGrid-grid-md-8",
                                    "grid-md-9": "MuiGrid-grid-md-9",
                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                    "grid-md-true": "MuiGrid-grid-md-true",
                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                    "item": "MuiGrid-item",
                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                    "root": "MuiGrid-root",
                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                  }
                                }
                                container={true}
                              >
                                <div
                                  className="MuiGrid-root makeStyles-center-148 MuiGrid-container"
                                >
                                  <WithStyles(ForwardRef(CircularProgress))>
                                    <ForwardRef(CircularProgress)
                                      classes={
                                        Object {
                                          "circle": "MuiCircularProgress-circle",
                                          "circleDisableShrink": "MuiCircularProgress-circleDisableShrink",
                                          "circleIndeterminate": "MuiCircularProgress-circleIndeterminate",
                                          "circleStatic": "MuiCircularProgress-circleStatic",
                                          "colorPrimary": "MuiCircularProgress-colorPrimary",
                                          "colorSecondary": "MuiCircularProgress-colorSecondary",
                                          "indeterminate": "MuiCircularProgress-indeterminate",
                                          "root": "MuiCircularProgress-root",
                                          "static": "MuiCircularProgress-static",
                                          "svg": "MuiCircularProgress-svg",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiCircularProgress-root MuiCircularProgress-colorPrimary MuiCircularProgress-indeterminate"
                                        role="progressbar"
                                        style={
                                          Object {
                                            "height": 40,
                                            "width": 40,
                                          }
                                        }
                                      >
                                        <svg
                                          className="MuiCircularProgress-svg"
                                          viewBox="22 22 44 44"
                                        >
                                          <circle
                                            className="MuiCircularProgress-circle MuiCircularProgress-circleIndeterminate"
                                            cx={44}
                                            cy={44}
                                            fill="none"
                                            r={20.2}
                                            strokeWidth={3.6}
                                            style={Object {}}
                                          />
                                        </svg>
                                      </div>
                                    </ForwardRef(CircularProgress)>
                                  </WithStyles(ForwardRef(CircularProgress))>
                                </div>
                              </ForwardRef(Grid)>
                            </WithStyles(ForwardRef(Grid))>
                          </Loading>
                        </Route>
                      </CustomRoute>
                    </Switch>
                  </div>
                </Styled(MuiBox)>
              </div>
            </Styled(MuiBox)>
          </div>
        </ThemeProvider>
      </Layout>
    </Router>
  </IntlProvider>
</App>
`;
